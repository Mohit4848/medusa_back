name: Deploy Medusa to AWS ECS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: medusa-backend-cluster-dev
  ECS_SERVICE: medusa-backend-service-dev
  CONTAINER_NAME: medusa-backend-container

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    # Debugging steps
    - name: Check directory contents
      run: ls -la

    - name: Debug package.json
      run: cat package.json
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/medusa-backend:latest,${{ secrets.DOCKERHUB_USERNAME }}/medusa-backend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/medusa-backend:latest
        cache-to: type=inline
        build-args: |
          NPM_CONFIG_LOGLEVEL=verbose
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/medusa-backend:latest,${{ secrets.DOCKERHUB_USERNAME }}/medusa-backend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/medusa-backend:latest
        cache-to: type=inline

  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Get current task definition
      run: |
        aws ecs describe-task-definition --task-definition medusa-backend-task-dev \
        --query taskDefinition > task-definition.json
    
    - name: Update container image in task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ secrets.DOCKERHUB_USERNAME }}/medusa-backend:${{ github.sha }}
    
    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
